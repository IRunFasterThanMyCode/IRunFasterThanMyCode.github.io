axis.text.y = element_text(size = 14))
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = factor(from_name, levels = top_contributors$from_name))) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Accent") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14))
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = factor(from_name, levels = top_contributors$from_name))) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "YlOrRd") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14))
?scale_fill_gradient
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = factor(from_name, levels = top_contributors$from_name))) +
geom_bar(stat = "identity") +
scale_fill_gradient2(low = "yellow", mid = "orange", high = "darkred") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14))
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = factor(from_name, levels = top_contributors$from_name))) +
geom_bar(stat = "identity") +
scale_fill_gradient2() + ##low = "yellow", mid = "orange", high = "darkred") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14))
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = factor(from_name, levels = top_contributors$from_name))) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14))
top_contributors <- URC              %>%
count(from_name) %>%
top_n(50, n)     %>%
arrange(desc(n))
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = factor(from_name, levels = top_contributors$from_name))) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14))
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = factor(from_name, levels = top_contributors$from_name))) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
top_contributors <- URC              %>%
count(from_name)
top_contributors %>% filter(from_name == "Sam Robson")
top_contributors <- URC              %>%
count(from_name) %>%
top_n(50, n)     %>%
arrange(desc(n))
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = factor(from_name, levels = top_contributors$from_name))) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = from_name) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
scale_color_brewer() +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = from_name)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
scale_color_brewer() +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = from_name)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
scale_color_gradient2(low = "yellow", mid = "orange", high = "red") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
scale_color_gradient2(low = "yellow", mid = "orange", high = "red") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
scale_color_gradient2(low = "yellow", mid = "orange", high = "red") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = from_name)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
scale_fill_gradient2(low = "yellow", mid = "orange", high = "red") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
scale_fill_gradient2(low = "yellow", mid = "orange", high = "red") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
scale_fill_gradient2(low = "yellow", high = "red") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
top_contributors <- URC              %>%
count(from_name) %>%
top_n(50, n)     %>%
arrange(desc(n))
ggplot(top_contributors,
aes(x = factor(from_name, levels = top_contributors$from_name),
y = n,
fill = n)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.title  = element_text(size = 18),
axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
top_contributors
jamesadams <- URC %>%
filter(from_name == "James Adams")
head(jamesadams)
month(head(URC$created_time))
class(jamesadams$created_time)
head(as.POSIXct(jamesadams$created_time))
jamesadams$created_time <- as.POSIXct(jamesadams$created_time)
head(month(jamesadams$created_time))
URC$created_time <- as.POSIXct(URC$created_time)
jamesadams <- URC                                %>%
filter(from_name == "James Adams") %>%
group_by(created_time)             %>%
summarise(n)
jamesadams <- URC                                %>%
filter(from_name == "James Adams") %>%
count(created_time)
jamesadams
ggplot2(jamesadams, aes(x = created_time, y = n))
ggplot(jamesadams, aes(x = created_time, y = n))
ggplot(jamesadams, aes(x = created_time, y = n)) + geom_line()
URC$created_time <- as.POSIXct(URC$created_time)
jamesadams <- URC                                %>%
filter(from_name == "James Adams") %>%
count(format(created_time, "%Y:%M"))
ggplot(jamesadams, aes(x = created_time, y = n)) + geom_line()
jamesadams
jamesadams <- URC                                %>%
filter(from_name == "James Adams") %>%
count(format(created_time, "%Y:%m"))
jamesadams
ggplot(jamesadams, aes(y = n)) + geom_line()
ggplot(jamesadams, aes(x = format(created_time, "%Y:%m"), y = n)) + geom_line()
jamesadams
ggplot(jamesadams, aes(x = jamesadams[[1]], y = n)) + geom_line()
ggplot(jamesadams, aes(x = jamesadams[[1]], y = jamesadams[[2]])) + geom_line()
jamesadams
jamesadams <- URC                                %>%
filter(from_name == "James Adams") %>%
mutate(Month = format(created_time, "%Y:%m")) %>%
count(Month)
jamesadams
jamesadams
ggplot(jamesadams, aes(x = Month, y = n)) + geom_line()
ggplot(jamesadams, aes(x = Month, y = n)) + geom_bar
ggplot(jamesadams, aes(x = Month, y = n)) + geom_bar()
ggplot(jamesadams, aes(x = Month, y = n)) + geom_bar(stat = "identity")
jamesadams <- URC                                %>%
filter(from_name == "James Adams") %>%
mutate(Month = format(created_time, "%Y:%m")) %>%
count(created_time)
ggplot(jamesadams, aes(x = Month, y = n)) + geom_bar(stat = "identity")
ggplot(jamesadams, aes(x = created_time, y = n)) + geom_bar(stat = "identity")
jamesadams <- URC                                %>%
filter(from_name == "James Adams") %>%
mutate(Month = format(created_time, "%Y:%m")) %>%
count(Month)
ggplot(jamesadams, aes(x = Month, y = n)) + geom_bar(stat = "identity")
head(weekdays(URC$created_time))
popular <- URC %>%
count(likes_count) %>%
top_n(100) %>%
transmute(message = iconv(message, "latin1", "ASCII", sub = ""))
popular <- URC %>%
count(likes_count)
popular
popular <- URC %>%
top_n(100, likes_count) %>%
transmute(message = iconv(message, "latin1", "ASCII", sub = ""))
popular
popular
head(popular$message)
popular <- URC %>%
top_n(100, likes_count) %>%
arrange(desc(likes_count))
transmute(message = iconv(message, "latin1", "ASCII", sub = ""))
popular <- URC %>%
top_n(100, likes_count) %>%
arrange(desc(likes_count)) %>%
transmute(message = iconv(message, "latin1", "ASCII", sub = ""))
popular
head(popular$message)
library("tm")
library("wordcloud")
library("SnowballC")
popular <- URC %>%
top_n(100, likes_count) %>%
arrange(desc(likes_count)) %>%
transmute(message = iconv(message, "latin1", "ASCII", sub = ""))
cloud_dat <- Corpus(VectorSource(popular$message))                   ## Create Corpus
cloud_dat <- tm_map(cloud_dat, PlainTextDocument)                    ## Make plain text
cloud_dat <- tm_map(cloud_dat, content_transformer(tolower))         ## Convert to lower case
cloud_dat <- tm_map(cloud_dat, removePunctuation)                    ## Remove punctuation
cloud_dat <- tm_map(cloud_dat, removeWords, stopwords("english"))    ## Remove common English words
#cloud_dat <- tm_map(cloud_dat, stemDocument)                        ## Condense words down to common stems
par(mar = c(0,0,0,0))
wordcloud(cloud_dat, max.words = 1000, min.freq = 20, random.order = FALSE, colors = brewer.pal(9, "BuGn")[2:9])
popular <- URC %>%
top_n(1000, likes_count) %>%
arrange(desc(likes_count)) %>%
transmute(message = iconv(message, "latin1", "ASCII", sub = ""))
cloud_dat <- Corpus(VectorSource(popular$message))                   ## Create Corpus
cloud_dat <- tm_map(cloud_dat, PlainTextDocument)                    ## Make plain text
cloud_dat <- tm_map(cloud_dat, content_transformer(tolower))         ## Convert to lower case
cloud_dat <- tm_map(cloud_dat, removePunctuation)                    ## Remove punctuation
cloud_dat <- tm_map(cloud_dat, removeWords, stopwords("english"))    ## Remove common English words
#cloud_dat <- tm_map(cloud_dat, stemDocument)                        ## Condense words down to common stems
par(mar = c(0,0,0,0))
wordcloud(cloud_dat, max.words = 1000, min.freq = 20, random.order = FALSE, colors = brewer.pal(9, "BuGn")[2:9])
wordcloud(cloud_dat, max.words = 1000, min.freq = 20, random.order = FALSE, colors = brewer.pal(9, "RdBu"))
cloud_dat <- tm_map(cloud_dat, stemDocument)                        ## Condense words down to common stems
par(mar = c(0,0,0,0))
wordcloud(cloud_dat, max.words = 1000, min.freq = 20, random.order = FALSE, colors = brewer.pal(9, "RdBu"))
wordcloud(cloud_dat, max.words = 1000, min.freq = 20, random.order = FALSE, colors = brewer.pal(9, "RdBu")[-5])
wordcloud(cloud_dat, max.words = 1000, min.freq = 20, random.order = FALSE, colors = brewer.pal(9, "RdBu")[-c(4:6)])
wordcloud(cloud_dat, max.words = 1000, min.freq = 20, random.order = FALSE, colors = brewer.pal(9, "BuRd")[-c(4:6)])
wordcloud(cloud_dat, max.words = 1000, min.freq = 20, random.order = FALSE, colors = brewer.pal(9, "RdBu")[-c(4:6)])
wordcloud(cloud_dat, max.words = 1000, min.freq = 50, random.order = FALSE, colors = brewer.pal(9, "RdBu")[-c(4:6)])
wordcloud(cloud_dat, max.words = 1000, min.freq = 30, random.order = FALSE, colors = brewer.pal(9, "RdBu")[-c(4:6)])
library("tm")
library("wordcloud")
library("SnowballC")
popular <- URC                        %>%
top_n(1000, likes_count)   %>%
arrange(desc(likes_count)) %>%
transmute(message = iconv(message, "latin1", "ASCII", sub = ""))
cloud_dat <- Corpus(VectorSource(popular$message))                   ## Create Corpus
cloud_dat <- tm_map(cloud_dat, PlainTextDocument)                    ## Make plain text
cloud_dat <- tm_map(cloud_dat, content_transformer(tolower))         ## Convert to lower case
cloud_dat <- tm_map(cloud_dat, removePunctuation)                    ## Remove punctuation
cloud_dat <- tm_map(cloud_dat, removeWords, stopwords("english"))    ## Remove common English words
cloud_dat <- tm_map(cloud_dat, stemDocument)                        ## Condense words down to common stems
wordcloud(cloud_dat, max.words = 1000, min.freq = 30, random.order = FALSE, colors = brewer.pal(9, "RdBu")[-c(4:6)])
ggplot(jamesadams, aes(x = Month, y = n)) + geom_bar(stat = "identity")
jamesadams
URC$created_time <- as.POSIXct(URC$created_time)
jamesadams <- URC                                           %>%
filter(from_name == "James Adams")            %>%
mutate(Month = as.POSIXct(format(created_time, "%Y:%m"))) %>%
count(Month)
?xts
install.packages("xts")
library(xts)
jamesadams <- URC                                           %>%
filter(from_name == "James Adams")            %>%
transmute(created_time = as.POSIXct(created_time)) %>%
jamesadams <- URC                                           %>%
filter(from_name == "James Adams")            %>%
transmute(created_time = as.POSIXct(created_time))
jamesadams
head(jamesadams)
jamesadams <- URC                                           %>%
filter(from_name == "James Adams")            %>%
mutate(created_time = as.POSIXct(created_time))
head(jamesadams)
?xts
jamesadams <- URC                                             %>%
filter(from_name == "James Adams")              %>%
mutate(created_time = as.POSIXct(created_time)) %>%
mutate(Month = format(created_time, "%Y:%m"))   %>%
count(Month)
jamesadams
jamesadams <- URC                                             %>%
filter(from_name == "James Adams")              %>%
mutate(created_time = as.POSIXct(created_time)) %>%
mutate(Month = format(created_time, "%m"))      %>%
mutate(Year  = format(created_time, "%Y"))
jamesadams
head(jamesadams)
jamesadams <- URC                                             %>%
filter(from_name == "James Adams")              %>%
mutate(created_time = as.POSIXct(created_time)) %>%
mutate(Month = format(created_time, "%m"))      %>%
mutate(Year  = format(created_time, "%Y"))      %>%
mutate(Date  = as.POSIXct(paste(Year,Month,'01',sep="-"))))
jamesadams <- URC                                             %>%
filter(from_name == "James Adams")              %>%
mutate(created_time = as.POSIXct(created_time)) %>%
mutate(Month = format(created_time, "%m"))      %>%
mutate(Year  = format(created_time, "%Y"))      %>%
mutate(Date  = as.POSIXct(paste(Year,Month,'01',sep="-")))
head(jamesadams)
jamesadams <- URC                                                        %>%
filter(from_name == "James Adams")                         %>%
mutate(created_time = as.POSIXct(created_time))            %>%
mutate(Month = format(created_time, "%m"))                 %>%
mutate(Year  = format(created_time, "%Y"))                 %>%
mutate(Date  = as.POSIXct(paste(Year,Month,'01',sep="-"))) %>%
count(Date)
jamesadams
ggplot(jamesadams, aes(x = Date, y = n)) + geom_point() + scale_x_date()
jamesadams <- URC                                                        %>%
filter(from_name == "James Adams")                         %>%
mutate(created_time = as.POSIXct(created_time))            %>%
mutate(Month = format(created_time, "%m"))                 %>%
mutate(Year  = format(created_time, "%Y"))                 %>%
mutate(Date  = as.Date(paste(Year,Month,'01',sep="-"))) %>%
count(Date)
ggplot(jamesadams, aes(x = Date, y = n)) + geom_point() + scale_x_date()
test <- xts(jamesadams$n, order.by = jamesadams$Date)
test <- xts(URC$from_name, order.by = URC$created_time)
test <- xts(URC$message, order.by = URC$created_time)
test <- apply.monthly(xts(URC$message, order.by = URC$created_time), length)
test <- apply.monthly(xts(URC$message, order.by = URC$created_time), FUN = length)
plot(test)
?`xts-package`
?xts
jamesadams <- URC                                                        %>%
filter(from_name == "James Adams")                         %>%
mutate(created_time = as.POSIXct(created_time))            %>%
count(created_date)
jamesadams <- URC                                                        %>%
filter(from_name == "James Adams")                         %>%
mutate(created_time = as.POSIXct(created_time))            %>%
count(created_time)
jamesadams
jamesadams_xts <- xts(jamesadams$n, order.by = jamesadams$created_time)
jamesadams <- URC                                                        %>%
filter(from_name == "James Adams")                         %>%
mutate(created_time = as.POSIXct(created_time))            %>%
count(created_time)
jamesadams_xts <- xts(jamesadams$n, order.by = jamesadams$created_time)
as.xts(jamesadams)
jamesadams_xts <- xts(jamesadams$n, order.by = jamesadams$created_time)
test <- apply.monthly(jamesadams_xts, FUN = sum)
plot(test)
class(test)
plot(test)
plot(test, ylab = "Number of Posts")
?plot.xts
plot(test, ylab = "Number of Posts", type = "bar.col")
plot(test, ylab = "Number of Posts", type = "bars")
plot(test, ylab = "Number of Posts", type = "bars")
plot(test, ylab = "Number of Posts", type = "candles")
plot.xts(test, ylab = "Number of Posts", type = "candles")
plot(test, ylab = "Number of Posts", type = 'candles')
plot(test, type = 'candles', ylab = "Number of Posts")
plot(test, ylab = "Number of Posts")
comments <- URC                        %>%
top_n(1000, comments_count)   %>%
arrange(desc(comments_count)) %>%
transmute(message = iconv(message, "latin1", "ASCII", sub = ""))
cloud_dat <- Corpus(VectorSource(comments$message))                  ## Create Corpus
cloud_dat <- tm_map(cloud_dat, PlainTextDocument)                    ## Make plain text
cloud_dat <- tm_map(cloud_dat, content_transformer(tolower))         ## Convert to lower case
cloud_dat <- tm_map(cloud_dat, removePunctuation)                    ## Remove punctuation
cloud_dat <- tm_map(cloud_dat, removeWords, stopwords("english"))    ## Remove common English words
cloud_dat <- tm_map(cloud_dat, stemDocument)                         ## Condense words down to common stems
wordcloud(cloud_dat, max.words = 1000, min.freq = 30, random.order = FALSE, colors = brewer.pal(9, "RdBu")[-c(4:6)])
post_day <- URC %>%
mutate(dow = weekdays(created_time))
post_day
post_day <- URC %>%
mutate(dow = weekdays(created_time)) %>%
count(dow)
head(post_day)
post_day
post_day <- URC %>%
mutate(dow = factor(weekdays(created_time), labels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
count(dow)
ggplot(post_day, aes(x = dow, y = n, fill = dow)) + geom_bar(stat = "identity")
post_day <- URC %>%
mutate(dow = weekdays(created_time)) %>%
count(dow)
ggplot(post_day, aes(x = dow, y = n, fill = dow)) + geom_bar(stat = "identity")
ggplot(post_day, aes(x = dow, y = n, fill = dow)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(size = 28, rotate = 45))
ggplot(post_day, aes(x = dow, y = n, fill = dow)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(size = 28, angle = 45))
ggplot(post_day, aes(x = dow, y = n, fill = dow)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts")
theme(axis.text.x = element_text(size = 28, angle = 45, vjust = 1),
axis.text.y = element_text(size = 14))
ggplot(post_day, aes(x = dow, y = n, fill = dow)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.text.x = element_text(size = 28, angle = 45, vjust = 1),
axis.text.y = element_text(size = 14))
ggplot(post_day, aes(x = dow, y = n, fill = dow)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.text.x = element_text(size = 28, angle = 45, vjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(post_day, aes(x = dow, y = n, fill = dow)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.text.x = element_text(size = 28, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.position = "none")
ggplot(post_day, aes(x = dow, y = n, fill = dow)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.text.x = element_text(size = 28, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
axis.title  = element_text(size = 20),
legend.position = "none")
post_day <- URC %>%
mutate(dow = factor(weekdays(created_time), labels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
count(dow)
ggplot(post_day, aes(x = dow, y = n, fill = dow)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Number of Posts") +
theme(axis.text.x = element_text(size = 28, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
axis.title  = element_text(size = 20),
legend.position = "none")
